import { useEffect, useState } from 'react'
import CircuitMap from '@/components/map/circuit-map'
import Head from 'next/head'
import Navbar from '@/components/navbar/navbar'
import CircuitCard from '@/components/circuit/circuit-card'
import TripPlanner from '@/components/trip/trip-planner'

export default function Home() {
   const [circuits, setCircuits] = useState<Circuit[]>()
   const [selectedCircuit, setSelectedCircuit] = useState<Circuit | undefined>()
   const [scoredCircuits, setScoredCircuits] = useState<ScoredCircuit[] | undefined>()
   const tripCount = 3 // how many top trips to show on List and Map

   useEffect(() => {
      fetch('/api/get-circuits')
         .then((res) => res.json())
         .then((circuits) => {
            if (circuits) {
               console.log(circuits)
               setCircuits(circuits)
            }
         })
      // eslint-disable-next-line react-hooks/exhaustive-deps
   }, [])

   const selectCircuit = (circuit: Circuit) => {
      setSelectedCircuit(circuit)
   }

   const planTrip = (circuit: Circuit) => {
      const { city_name } = circuit
      console.log('Planning a trip from', city_name)

      const payload = {
         selectedCircuit: selectedCircuit,
         circuits: circuits,
      }

      fetch('/api/get-scored-circuits', {
         method: 'POST',
         body: JSON.stringify(payload),
         headers: {
            'Content-Type': 'application/json',
         },
      })
         .then((res) => res.json())
         .then((scoredCircuits) => {
            if (scoredCircuits) {
               console.log('[get-scored-circuits]', scoredCircuits)
               setScoredCircuits(scoredCircuits)
               getTripBounds(scoredCircuits, tripCount)
            }
         })
   }

   const getTripBounds = (circuits: ScoredCircuit[], tripCount: number) => {
      console.log('Getting trip bounds.', circuits)

      let se = { lat: 0, lng: 0 }
      let nw = { lat: 0, lng: 0 }
      // var bounds = new maps.LatLngBounds(myPlace, Item_1);
      circuits.forEach((circuit, index) => {
         if (index < tripCount) {
            console.log(circuit)
            const lat = circuit.latitude
            const lng = circuit.longitude
         }
      })
   }

   return (
      <>
         <Head>
            <title>Vote Tripper</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
         </Head>

         <Navbar selectedCircuit={selectedCircuit} planTrip={planTrip} />

         <CircuitMap
            selectedCircuit={selectedCircuit}
            selectCircuit={selectCircuit} // handler
            circuitList={circuits}
            scoredCircuits={scoredCircuits}
            tripCount={tripCount}
         />
         {selectedCircuit && scoredCircuits && (
            <TripPlanner
               tripCount={tripCount}
               scoredCircuits={scoredCircuits}
               startCircuit={selectedCircuit}
            />
         )}
      </>
   )
}

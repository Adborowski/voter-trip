import Map from '../map'
import { useRouter } from 'next/router'
import Head from 'next/head'
import { Metadata, ResolvingMetadata } from 'next'

export async function generateMetadata(
   { params, searchParams }: any,
   parent: ResolvingMetadata
): Promise<Metadata> {
   // read route params
   const originId = params.originId

   // fetch data
   //  console.log('GENERATOR', router.query)

   return {
      title: `Super title ${originId}`,
      description: 'I am description!',
      openGraph: {
         title: `I am OG Title ${originId}`,
         description: 'I am OG Desc',
         url: 'https://adamborowski.com',
         siteName: 'OG Sitename',
      },
   }
}

const TripMap = () => {
   const router = useRouter()
   let { originId } = router.query

   const shareTitle = `Jedziemy na wycieczkę!`
   const shareDesc = `Z okręgu ${originId}`

   console.log('XX', originId)

   return (
      <>
         <Head>
            <title>Vote Tripper</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
            {/* <meta property="og:title" content={shareTitle} /> */}
            {/* <meta property="og:description" content={shareDesc} /> */}
            {/* <meta property="og:type" content="video.movie" /> */}
            {/* <meta property="og:url" content="https://www.imdb.com/title/tt0117500/" /> */}
            {/* <meta property="og:image" content="https://ia.media-imdb.com/images/rock.jpg" /> */}
         </Head>
         <Map originId={originId} />
      </>
   )
}

export default TripMap
